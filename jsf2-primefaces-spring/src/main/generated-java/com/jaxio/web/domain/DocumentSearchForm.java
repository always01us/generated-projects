/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-jsf2-spring-conversation:src/main/java/domain/SearchForm.e.vm.java
 */
package com.jaxio.web.domain;

import static com.jaxio.dao.support.EntitySelector.newEntitySelector;
import javax.inject.Named;
import com.jaxio.dao.support.EntitySelector;
import com.jaxio.dao.support.SearchParameters;
import com.jaxio.domain.Account;
import com.jaxio.domain.Document;
import com.jaxio.domain.Document_;
import com.jaxio.web.domain.support.GenericSearchForm;
import com.jaxio.web.faces.ConversationContextScoped;

/**
 * View Helper to search {@link Document}.
 * It exposes a {@link Document} instance so it can be used in search by Example query.
 */
@Named
@ConversationContextScoped
public class DocumentSearchForm extends GenericSearchForm<Document, String, DocumentSearchForm> {
    private static final long serialVersionUID = 1L;

    protected Document document = new Document();
    protected EntitySelector<Document, Account, String> ownerSelector = newEntitySelector(Document_.owner);

    public Document getDocument() {
        return document;
    }

    @Override
    protected Document getEntity() {
        return getDocument();
    }

    @Override
    public DocumentSearchForm newInstance() {
        return new DocumentSearchForm();
    }

    @Override
    public SearchParameters toSearchParameters() {
        return new SearchParameters() //
                .anywhere() //
                .term(term) //
                .entity(ownerSelector) //
        ;
    }

    @Override
    public void resetWithOther(DocumentSearchForm other) {
        this.document = other.getDocument();
        this.term = other.getTerm();
        this.ownerSelector = other.getOwnerSelector();
    }

    // Relation selectors
    public EntitySelector<Document, Account, String> getOwnerSelector() {
        return ownerSelector;
    }
}
