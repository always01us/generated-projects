/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-jsf2-spring-conversation:src/main/java/domain/SearchForm.e.vm.java
 */
package com.jaxio.web.domain;

import static com.jaxio.dao.support.EntitySelector.newEntitySelector;
import static com.jaxio.dao.support.PropertySelector.newPropertySelector;
import static com.jaxio.dao.support.Ranges.RangeInteger.newRangeInteger;
import javax.inject.Named;
import com.jaxio.dao.support.EntitySelector;
import com.jaxio.dao.support.PropertySelector;
import com.jaxio.dao.support.Ranges.RangeInteger;
import com.jaxio.dao.support.SearchParameters;
import com.jaxio.domain.Account;
import com.jaxio.domain.Book;
import com.jaxio.domain.Book_;
import com.jaxio.web.domain.support.GenericSearchForm;
import com.jaxio.web.faces.ConversationContextScoped;

/**
 * View Helper to search {@link Book}.
 * It exposes a {@link Book} instance so it can be used in search by Example query.
 */
@Named
@ConversationContextScoped
public class BookSearchForm extends GenericSearchForm<Book, Integer, BookSearchForm> {
    private static final long serialVersionUID = 1L;

    protected Book book = new Book();
    protected RangeInteger<Book> numberOfPagesRange = newRangeInteger(Book_.numberOfPages);
    protected PropertySelector<Book, String> titleSelector = newPropertySelector(Book_.title);
    protected PropertySelector<Book, Integer> numberOfPagesSelector = newPropertySelector(Book_.numberOfPages);
    protected EntitySelector<Book, Account, String> ownerSelector = newEntitySelector(Book_.owner);

    public Book getBook() {
        return book;
    }

    @Override
    protected Book getEntity() {
        return getBook();
    }

    @Override
    public BookSearchForm newInstance() {
        return new BookSearchForm();
    }

    @Override
    public SearchParameters toSearchParameters() {
        return new SearchParameters() //
                .anywhere() //
                .term(term) //
                .range(numberOfPagesRange) //
                .property(titleSelector) //
                .property(numberOfPagesSelector) //
                .entity(ownerSelector) //
        ;
    }

    @Override
    public void resetWithOther(BookSearchForm other) {
        this.book = other.getBook();
        this.term = other.getTerm();
        this.numberOfPagesRange = other.getNumberOfPagesRange();
        this.titleSelector = other.getTitleSelector();
        this.numberOfPagesSelector = other.getNumberOfPagesSelector();
        this.ownerSelector = other.getOwnerSelector();
    }

    // Ranges
    public RangeInteger<Book> getNumberOfPagesRange() {
        return numberOfPagesRange;
    }

    // Property selectors
    public PropertySelector<Book, String> getTitleSelector() {
        return titleSelector;
    }

    public PropertySelector<Book, Integer> getNumberOfPagesSelector() {
        return numberOfPagesSelector;
    }

    // Relation selectors
    public EntitySelector<Book, Account, String> getOwnerSelector() {
        return ownerSelector;
    }
}
