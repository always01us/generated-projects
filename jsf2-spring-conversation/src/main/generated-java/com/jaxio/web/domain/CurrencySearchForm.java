/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to purchase Celerio ? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Template pack-jsf2-spring-conversation:src/main/java/domain/SearchForm.e.vm.java
 */
package com.jaxio.web.domain;

import static com.jaxio.repository.support.PropertySelector.newPropertySelector;
import static com.jaxio.repository.support.Ranges.RangeInteger.newRangeInteger;

import javax.inject.Named;

import com.jaxio.domain.Currency;
import com.jaxio.domain.Currency_;
import com.jaxio.repository.support.PropertySelector;
import com.jaxio.repository.support.Ranges.RangeInteger;
import com.jaxio.repository.support.SearchParameters;
import com.jaxio.web.domain.support.GenericSearchForm;
import com.jaxio.web.faces.ConversationContextScoped;

/**
 * View Helper to search {@link Currency}.
 * It exposes a {@link Currency} instance so it can be used in search by-example-query.
 */
@Named
@ConversationContextScoped
public class CurrencySearchForm extends GenericSearchForm<Currency, Integer, CurrencySearchForm> {
    private static final long serialVersionUID = 1L;
    protected Currency currency = new Currency();
    protected RangeInteger<Currency> decimalCountRange = newRangeInteger(Currency_.decimalCount);
    protected PropertySelector<Currency, String> codeSelector = newPropertySelector(Currency_.code);
    protected PropertySelector<Currency, String> nameSelector = newPropertySelector(Currency_.name);
    protected PropertySelector<Currency, Integer> decimalCountSelector = newPropertySelector(Currency_.decimalCount);

    public Currency getCurrency() {
        return currency;
    }

    @Override
    protected Currency getEntity() {
        return getCurrency();
    }

    @Override
    public CurrencySearchForm newInstance() {
        return new CurrencySearchForm();
    }

    @Override
    public SearchParameters toSearchParameters() {
        SearchParameters sp = searchParameters();
        sp.range(decimalCountRange);
        sp.property(codeSelector, nameSelector, decimalCountSelector);
        return sp;
    }

    @Override
    public void resetWithOther(CurrencySearchForm other) {
        this.currency = other.getCurrency();
        this.decimalCountRange = other.getDecimalCountRange();
        this.codeSelector = other.getCodeSelector();
        this.nameSelector = other.getNameSelector();
        this.decimalCountSelector = other.getDecimalCountSelector();
    }

    // Ranges
    public RangeInteger<Currency> getDecimalCountRange() {
        return decimalCountRange;
    }

    // Property selectors
    public PropertySelector<Currency, String> getCodeSelector() {
        return codeSelector;
    }

    public PropertySelector<Currency, String> getNameSelector() {
        return nameSelector;
    }

    public PropertySelector<Currency, Integer> getDecimalCountSelector() {
        return decimalCountSelector;
    }
}
