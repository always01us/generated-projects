/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to purchase Celerio ? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Template pack-jsf2-spring-conversation:src/main/java/domain/SearchForm.e.vm.java
 */
package com.jaxio.web.domain;

import static com.jaxio.repository.support.EntitySelector.newEntitySelector;
import static com.jaxio.repository.support.PropertySelector.newPropertySelector;

import javax.inject.Named;

import com.jaxio.domain.Address;
import com.jaxio.domain.Customer;
import com.jaxio.domain.Customer_;
import com.jaxio.repository.support.EntitySelector;
import com.jaxio.repository.support.PropertySelector;
import com.jaxio.repository.support.SearchParameters;
import com.jaxio.web.domain.support.GenericSearchForm;
import com.jaxio.web.faces.ConversationContextScoped;

/**
 * View Helper to search {@link Customer}.
 * It exposes a {@link Customer} instance so it can be used in search by-example-query.
 */
@Named
@ConversationContextScoped
public class CustomerSearchForm extends GenericSearchForm<Customer, Integer, CustomerSearchForm> {
    private static final long serialVersionUID = 1L;
    protected Customer customer = new Customer();
    protected PropertySelector<Customer, String> companyNameSelector = newPropertySelector(Customer_.companyName);
    protected EntitySelector<Customer, Address, Integer> addressSelector = newEntitySelector(Customer_.address);

    public Customer getCustomer() {
        return customer;
    }

    @Override
    protected Customer getEntity() {
        return getCustomer();
    }

    @Override
    public CustomerSearchForm newInstance() {
        return new CustomerSearchForm();
    }

    @Override
    public SearchParameters toSearchParameters() {
        SearchParameters sp = searchParameters();
        sp.property(companyNameSelector);
        sp.entity(addressSelector);
        return sp;
    }

    @Override
    public void resetWithOther(CustomerSearchForm other) {
        this.customer = other.getCustomer();
        this.companyNameSelector = other.getCompanyNameSelector();
        this.addressSelector = other.getAddressSelector();
    }

    // Property selectors
    public PropertySelector<Customer, String> getCompanyNameSelector() {
        return companyNameSelector;
    }

    // Relation selectors
    public EntitySelector<Customer, Address, Integer> getAddressSelector() {
        return addressSelector;
    }
}
