/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to purchase Celerio ? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Template pack-jsf2-spring-conversation:src/main/java/domain/FileDownload.e.vm.java
 */
package com.jaxio.web.domain;

import java.io.ByteArrayInputStream;

import javax.inject.Inject;
import javax.inject.Named;
import javax.inject.Singleton;

import org.primefaces.model.DefaultStreamedContent;
import org.primefaces.model.StreamedContent;
import org.springframework.transaction.annotation.Transactional;

import com.jaxio.domain.Customer;
import com.jaxio.repository.CustomerRepository;

/**
 * Stateless controller to download {@link Customer} binaries 
 */
@Named
@Singleton
public class CustomerFileDownload {
    @Inject
    private CustomerRepository customerRepository;

    /**
     * Primefaces support for contractBinary file download, this method is transactional so the binary can be lazily loaded
     */
    @Transactional(readOnly = true)
    public StreamedContent getContractBinaryStream(Customer detachedCustomer) {
        Customer customer = null;
        if (detachedCustomer.isContractBinarySet()) {
            customer = detachedCustomer;
        } else if (detachedCustomer.isIdSet()) {
            customer = customerRepository.get(detachedCustomer);
        }

        if (customer != null && customer.getContractBinary() != null) {
            return new DefaultStreamedContent( //
                    new ByteArrayInputStream(customer.getContractBinary()), //
                    customer.getContractContentType(), //
                    customer.getContractFileName());
        } else {
            return null;
        }
    }
}