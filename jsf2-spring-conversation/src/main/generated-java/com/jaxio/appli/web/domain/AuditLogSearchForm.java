/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to purchase Celerio ? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Template pack-jsf2-spring-conversation:src/main/java/domain/SearchForm.e.vm.java
 */
package com.jaxio.appli.web.domain;

import static com.jaxio.appli.repository.support.PropertySelector.newPropertySelector;
import static com.jaxio.appli.repository.support.Range.newRange;

import java.util.Date;

import javax.inject.Named;

import com.jaxio.appli.domain.AuditLog;
import com.jaxio.appli.domain.AuditLog_;
import com.jaxio.appli.repository.support.PropertySelector;
import com.jaxio.appli.repository.support.Range;
import com.jaxio.appli.repository.support.SearchParameters;
import com.jaxio.appli.web.domain.support.GenericSearchForm;
import com.jaxio.appli.web.faces.ConversationContextScoped;

/**
 * View Helper to search {@link AuditLog}.
 * It exposes a {@link AuditLog} instance so it can be used in search by-example-query.
 */
@Named
@ConversationContextScoped
public class AuditLogSearchForm extends GenericSearchForm<AuditLog, Integer, AuditLogSearchForm> {
    private static final long serialVersionUID = 1L;
    protected AuditLog auditLog = new AuditLog();
    protected Range<AuditLog, Date> eventDateRange = newRange(AuditLog_.eventDate);
    protected PropertySelector<AuditLog, String> authorSelector = newPropertySelector(AuditLog_.author);
    protected PropertySelector<AuditLog, String> eventSelector = newPropertySelector(AuditLog_.event);
    protected PropertySelector<AuditLog, String> stringAttribute1Selector = newPropertySelector(AuditLog_.stringAttribute1);
    protected PropertySelector<AuditLog, String> stringAttribute2Selector = newPropertySelector(AuditLog_.stringAttribute2);
    protected PropertySelector<AuditLog, String> stringAttribute3Selector = newPropertySelector(AuditLog_.stringAttribute3);

    public AuditLog getAuditLog() {
        return auditLog;
    }

    @Override
    protected AuditLog getEntity() {
        return getAuditLog();
    }

    @Override
    public AuditLogSearchForm newInstance() {
        return new AuditLogSearchForm();
    }

    @Override
    public SearchParameters toSearchParameters() {
        SearchParameters sp = searchParameters();
        sp.range(eventDateRange);
        sp.property(authorSelector, eventSelector, stringAttribute1Selector, stringAttribute2Selector, stringAttribute3Selector);
        return sp;
    }

    @Override
    public void resetWithOther(AuditLogSearchForm other) {
        this.auditLog = other.getAuditLog();
        this.eventDateRange = other.getEventDateRange();
        this.authorSelector = other.getAuthorSelector();
        this.eventSelector = other.getEventSelector();
        this.stringAttribute1Selector = other.getStringAttribute1Selector();
        this.stringAttribute2Selector = other.getStringAttribute2Selector();
        this.stringAttribute3Selector = other.getStringAttribute3Selector();
    }

    // Ranges
    public Range<AuditLog, Date> getEventDateRange() {
        return eventDateRange;
    }

    // Property selectors
    public PropertySelector<AuditLog, String> getAuthorSelector() {
        return authorSelector;
    }

    public PropertySelector<AuditLog, String> getEventSelector() {
        return eventSelector;
    }

    public PropertySelector<AuditLog, String> getStringAttribute1Selector() {
        return stringAttribute1Selector;
    }

    public PropertySelector<AuditLog, String> getStringAttribute2Selector() {
        return stringAttribute2Selector;
    }

    public PropertySelector<AuditLog, String> getStringAttribute3Selector() {
        return stringAttribute3Selector;
    }
}
